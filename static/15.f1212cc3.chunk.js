webpackJsonp([15],{795:function(e,n,o){var t=o(15),a=o(45),u=o(92).PageRenderer;u.__esModule&&(u=u.default);var s=a({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:o(813)}},componentWillMount:function(){},render:function(){return t.createElement(u,Object.assign({},this.props,{content:this.state.content}))}});s.__catalog_loader__=!0,e.exports=s},813:function(e,n){e.exports='```image\nsrc: logo.svg\nplain: true\n```\n### Question\n1. Complete the `Class` below and implement a queue \u21b4 with 2 stacks (inQueu & outQueue). \u21b4 Your queue should have an enqueue and a dequeue method and it should be "first in first out" (FIFO).\n\n### Contraints\nOptimize for the time cost of mm calls on your queue. These can be any mix of enqueue and dequeue calls.\n\nAssume you already have a stack implementation and it gives O(1)O(1) time push and pop.\n\n### Example\n```code\nlang: js\n---\nconst queue = new Queue();\n\nqueue.enqueue(1);\nconsole.log(queue.instack); // [1]\nqueue.dequeue();\nconsole.log(queue.instack); // []\n\n```\n### You Code\n```html\n<iframe height="400px" width="100%" src="https://repl.it/@ricklopez/js-exercise-11?lite=true" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"></iframe>\n```\n### Video Walkthrough\n```video\nsrc: \'/assets/js-011.mp4\'\n```'}});
//# sourceMappingURL=15.f1212cc3.chunk.js.map