{"version":3,"sources":["webpack:///static/0.5c87c81c.chunk.js","webpack:///./catalog/javascript/basics/question-010.md?89fd","webpack:///./catalog/javascript/basics/question-010.md"],"names":["webpackJsonp","793","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","811"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GCF7B,GAAIC,GAAQ,EAAQ,IAChBC,EAAmB,EAAQ,IAC3BC,EAAe,EAAQ,IAAWA,YAClCA,GAAaC,aACfD,EAAeA,EAAaE,QAE9B,IAAIC,GAAsBJ,GACxBK,YAAa,sBACbC,gBAAiB,WACf,OAAQC,QAAS,EAAQ,OAE3BC,mBAAoB,aAUpBC,OAAQ,WACN,MAAOV,GAAMW,cAAcT,EAAcU,OAAOC,UAAWC,KAAKC,OAAQP,QAASM,KAAKE,MAAMR,aAGhGH,GAAoBY,oBAAqB,EACzCpB,EAAOC,QAAUO,GDUfa,IACA,SAAUrB,EAAQC,GEtCxBD,EAAOC,QAAU","file":"static/0.5c87c81c.chunk.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 793:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(15);\n    var createReactClass = __webpack_require__(45);\n    var PageRenderer = __webpack_require__(92).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(811)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../../node_modules/raw-loader/index.js!./question-010.md\", function() {\n            component.setState({\n              content: require(\"!!../../../node_modules/raw-loader/index.js!./question-010.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 811:\n/***/ (function(module, exports) {\n\nmodule.exports = \"```image\\nsrc: logo.svg\\nplain: true\\n```\\n### Question\\n10. Write a function that returns a new array of electric cars (make-model) in the cars array. The returned array should include a string with the make and model separated by a dash like this ['make-model', 'make-model'].\\n\\n### Example\\n\\n```code\\nlang: js\\n---\\nconst cars = [{\\nmake: 'BMW',\\ncolor: 'Black',\\nmodel: 'I3',\\ndoors: '2'\\nelectric: true\\n},\\n{\\nmake: 'Toyota',\\ncolor: 'Silver',\\nmodel: 'Prius',\\ndoors: '4'\\nelectric: false\\n},\\n{\\nmake: 'Nissan ',\\ncolor: 'Red',\\nmodel: 'Leaf',\\ndoors: '2'\\nelectric: true\\n}\\n];\\n \\n \\ngetElectricCars(cars) //returns ['BMW-I3', 'Nissan-Leaf']\\n```\\n### You Code\\n```html\\n<iframe height=\\\"400px\\\" width=\\\"100%\\\" src=\\\"https://repl.it/@ricklopez/js-exercise-10?lite=true\\\" scrolling=\\\"no\\\" frameborder=\\\"no\\\" allowtransparency=\\\"true\\\" allowfullscreen=\\\"true\\\" sandbox=\\\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\\\"></iframe>\\n```\\n### Video Walkthrough\\n```video\\nsrc: '/assets/js-010.mp4'\\n```\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/0.5c87c81c.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../../node_modules/raw-loader/index.js!./question-010.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../../node_modules/raw-loader/index.js!./question-010.md\", function() {\n            component.setState({\n              content: require(\"!!../../../node_modules/raw-loader/index.js!./question-010.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/javascript/basics/question-010.md\n// module id = 793\n// module chunks = 0","module.exports = \"```image\\nsrc: logo.svg\\nplain: true\\n```\\n### Question\\n10. Write a function that returns a new array of electric cars (make-model) in the cars array. The returned array should include a string with the make and model separated by a dash like this ['make-model', 'make-model'].\\n\\n### Example\\n\\n```code\\nlang: js\\n---\\nconst cars = [{\\nmake: 'BMW',\\ncolor: 'Black',\\nmodel: 'I3',\\ndoors: '2'\\nelectric: true\\n},\\n{\\nmake: 'Toyota',\\ncolor: 'Silver',\\nmodel: 'Prius',\\ndoors: '4'\\nelectric: false\\n},\\n{\\nmake: 'Nissan ',\\ncolor: 'Red',\\nmodel: 'Leaf',\\ndoors: '2'\\nelectric: true\\n}\\n];\\n \\n \\ngetElectricCars(cars) //returns ['BMW-I3', 'Nissan-Leaf']\\n```\\n### You Code\\n```html\\n<iframe height=\\\"400px\\\" width=\\\"100%\\\" src=\\\"https://repl.it/@ricklopez/js-exercise-10?lite=true\\\" scrolling=\\\"no\\\" frameborder=\\\"no\\\" allowtransparency=\\\"true\\\" allowfullscreen=\\\"true\\\" sandbox=\\\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\\\"></iframe>\\n```\\n### Video Walkthrough\\n```video\\nsrc: '/assets/js-010.mp4'\\n```\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/javascript/basics/question-010.md\n// module id = 811\n// module chunks = 0"],"sourceRoot":""}